<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/tool http://www.springframework.org/schema/tool/spring-tool.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd ">

	<aop:aspectj-autoproxy />
	<context:annotation-config />

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="file:#{systemEnvironment['COM_KAARMA_CONFIG']}/redis.properties">
		</property>
	</bean> 	
<!-- 	<import resource="../rabbit-beans/beans.xml" /> -->
<!-- 	<bean id="redisService" class="redis.api.impl.RedisServiceImpl" /> -->

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis-max-total}" />
		<property name="maxIdle" value="${redis-max-idle}" />
<!-- 		<property name="testOnBorrow" value="true" /> -->
	</bean>

	<bean id="redisSentinelConfig"
		class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
		<constructor-arg index="0" value="mymaster" />
		<constructor-arg index="1">
			<set>
				<value>${redis-sentinel1}</value>
				<value>${redis-sentinel2}</value>
				<value>${redis-sentinel3}</value>
			</set>
		</constructor-arg>
	</bean>

	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory" />

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory" />

<!-- 	<bean id="redisExpiryUtil" class="redis.utils.RedisExpiryUtil"> -->
<!-- 		<property name="expiryDaysKaarma" value="12"></property> -->
<!-- 		<property name="expiryDaysDMS" value="7"></property> -->
<!-- 		<property name="redisUpForDMS" value="true"></property> -->
<!-- 		<property name="redisUpForKaarma" value="true"></property> -->
<!-- 	</bean> -->



<!-- 	<bean id="failureHandler" class="redis.utils.FailureHandler"></bean> -->
<!-- 	<bean id="redisAspecChecks" class="redis.aspect.RedisAspectChecks"></bean> -->

	<beans profile="non-payisland">
		<bean id="jedisConnectionFactory"
			class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
<!-- 			<constructor-arg index="0" ref="redisSentinelConfig" /> -->
			<property name="hostName" value="dev.kaar-ma.com" />
			<property name="port" value="6379" />
			<property name="password" value="${redis-password}" />
			<property name="timeout" value="${redis-timeout}"></property>
			<property name="poolConfig" ref="jedisPoolConfig" />
		</bean>
	</beans>

	<beans profile="payisland">
		<bean id="jedisConnectionFactory"
			class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
			<!-- <constructor-arg index="0" ref="redisSentinelConfig" /> -->
			<!-- <property name="hostName" value="dev.kaar-ma.com" /> -->
			<!-- <property name="port" value="6380" /> -->
			<property name="password" value="${redis-password}" />
			<property name="timeout" value="${redis-timeout}"></property>
			<property name="poolConfig" ref="jedisPoolConfig" />
		</bean>
	</beans>



</beans>
